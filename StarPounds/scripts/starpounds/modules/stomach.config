{
  "scriptDelta" : 1,
  // Base Stomach Capacity. Probably don't change this. (Food items take up half, so 70 * 0.5 = 35)
  // Also has a multiplier in starpounds_sizes.
  "stomachCapacity": 35,
  // How often to run a digestion tick.
  "digestTimer": 0.1,
  "voreDigestTimer": 0.25, // How often a pred will run a digestion tick.
  // Average gurgle time, and minimum amount of time to pass before another gurgle can happen.
  "gurgleTime": 30,
  "minimumGurgleTime": 5,
  // Average rumble time, and minimum amount of time to pass before another rumble can happen.
  "rumbleTime": 15,
  "minimumRumbleTime": 3,
  // Base digestion healing:food ratio, ratio for energy skill, and caps (% max)/second
  "healingRatio": 1,
  "healingCap": 0.05,
  "energyRatio": 10,
  "energyCap": 0.5,
  "squelchVolume": 1,
  "squelchStruggleVolume": 1, // Multiplier to struggle squelch sounds.
  "squelchSloshVolume": 0.6, // Multiplier to slosh squelch sounds.
  "squelchLandingVolume": 0.4, // Multiplier to landing squelch sounds.
  "squelchMinimumVolume": 0.2, // % Minimum volume for squelches.
  "squelchRampTime": 2, // How long it takes the squelching sound to fade out.
  "squelchMaxVolumeCapacity": 10, // "Fullness" where squelches are at their loudest. (Based on the lowest between base and actual fullness)
  // Slosh stuffs.
  "sloshTimer": 0.25, // Time between sloshes.
  "minimumSloshTimer": 0.15, // Minimum time between sloshes. Going this fast reduces the effectiveness of each slosh so it's on par with the regular timer.
  "sloshDigestion": 0.5, // Seconds of extra digestion caused by a slosh.
  "sloshPercent": 0.1, // sloshPercent * (gurgleTime or rumbleTime) = Gurgle and rumble timer reduction caused by a slosh.
  "sloshEnergy": 10,
  "sloshEnergyLock": 0.25, // Multiplier for normal energy lockout time sloshes cause.
  "sloshActivationCount": 3, // How many 'windup' crouches before sloshing is activated.
  "sloshDeactivateTimer": 1, // How long to wait before resetting slosh windup.
  // Overstuffing damage.
  "stuffingDamage": 100, // Base damage per 100% fullness. (Food types have their own multiplier)
  "stuffingDamageStep": 2.5, // Stuffing damage rounded down to a multiple of this.
  "stuffingFullnessThreshold": 3 // What fullness has to exceed before damage.
}
